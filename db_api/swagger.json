{
  "swagger": "2.0",
  "info": {
    "description": "Api calls",
    "version": "1.0.0",
    "title": "DB APi routes"
  },
  "paths": {
    "/user/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a user and return the newly added user",
        "description": "",
        "operationId": "CreateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "",
        "operationId": "get_users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/user/info/{user_mail}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user info by mail",
        "description": "",
        "operationId": "get_user_info_by_mail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_mail",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "example": "barthelemy"
                },
                "mail": {
                  "example": "bartho@google.com",
                  "type": "string"
                },
                "pwdhash": {
                  "example": "a_hashed_password",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by id",
        "description": "",
        "operationId": "get_user_by_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user and return the newly updated user",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "This user has existing votes"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/post/": {
      "post": {
        "tags": [
          "post"
        ],
        "summary": "Create a post",
        "description": "",
        "operationId": "CreatePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "url_one": {
                  "type": "string"
                },
                "url_two": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      },
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get all Posts",
        "description": "",
        "operationId": "get_posts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "/post/{post_id}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get a post by id",
        "description": "",
        "operationId": "get_post_by_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "tags": [
          "post"
        ],
        "summary": "Update a post",
        "operationId": "updatePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated post object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "Delete a post",
        "operationId": "deletePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "This post has existing votes"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/vote/": {
      "post": {
        "tags": [
          "vote"
        ],
        "summary": "Create a vote",
        "description": "",
        "operationId": "CreateVote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        }
      },
      "get": {
        "tags": [
          "vote"
        ],
        "summary": "Get all votes",
        "description": "",
        "operationId": "get_votes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vote"
              }
            }
          }
        }
      }
    },
    "/vote/{post_id}/{user_id}": {
      "get": {
        "tags": [
          "vote"
        ],
        "summary": "Get a specific vote",
        "description": "",
        "operationId": "get_vote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        }
      },
      "put": {
        "tags": [
          "vote"
        ],
        "summary": "Update a specific vote",
        "description": "",
        "operationId": "update_vote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        }
      }
    },
    "/vote/{post_id}": {
      "get": {
        "tags": [
          "vote"
        ],
        "summary": "Get all votes for post_id",
        "description": "",
        "operationId": "get_votes_for_post",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vote"
              }
            }
          }
        }
      }
    },
    "/vote/user/{user_id}": {
      "get": {
        "tags": [
          "vote"
        ],
        "summary": "Get all votes for user_id",
        "description": "",
        "operationId": "get_votes_for_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vote"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "example": "barthelemy"
        },
        "mail": {
          "example": "bartho@google.com",
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 42
        },
        "title": {
          "type": "string",
          "example": "A cool Post title"
        },
        "url_one": {
          "type": "string",
          "example": "https://purr.objects-us-east-1.dream.io/i/2013-10-19%2016.06.51.jpg"
        },
        "url_two": {
          "type": "string",
          "example": "https://images.dog.ceo/breeds/pinscher-miniature/n02107312_46.jpg"
        }
      }
    },
    "Vote": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "example": 1
        },
        "post_id": {
          "type": "integer",
          "example": 2
        },
        "value": {
          "type": "integer",
          "example": 1
        }
      }
    }
  }
}